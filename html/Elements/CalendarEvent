<%args>
$Date => undef
$Object => undef
$DateTypes => undef
$Class     => 'RT__Ticket'
@Format    => undef
$ColumnMap => {}
</%args>
<div class="tooltip">
<small>

% if ($IsReminder and RTx::Calendar::LocalDate($Object->DueObj->Unix) eq $today) {
     <img src="<%$RT::WebImagesURL%>/reminder.png" />

% } elsif ($DateTypes->{Resolved}
%           and RTx::Calendar::LocalDate($Object->ResolvedObj->Unix) eq $today) {
         <img src="<%$RT::WebImagesURL%>/resolved.png" />

% } elsif ($DateTypes->{Starts} and $DateTypes->{Due}
%           and RTx::Calendar::LocalDate($Object->StartsObj->Unix) eq $today and RTx::Calendar::LocalDate($Object->DueObj->Unix) eq $today ) {
    <img src="<%$RT::WebImagesURL%>/starts_due.png" />

% } elsif ($DateTypes->{Due} and $DateTypes->{Created}
%           and RTx::Calendar::LocalDate($Object->DueObj->Unix) eq $today and RTx::Calendar::LocalDate($Object->CreatedObj->Unix) eq $today ) {
    <img src="<%$RT::WebImagesURL%>/created_due.png" />

% } elsif ($DateTypes->{Starts}
%           and RTx::Calendar::LocalDate($Object->StartsObj->Unix) eq $today) {
    <img src="<%$RT::WebImagesURL%>/starts.png" />

% } elsif ($DateTypes->{Due}
%           and RTx::Calendar::LocalDate($Object->DueObj->Unix) eq $today) {
    <img src="<%$RT::WebImagesURL%>/due.png" />

% } elsif ($DateTypes->{Created}
%           and RTx::Calendar::LocalDate($Object->CreatedObj->Unix) eq $today) {
    <img src="<%$RT::WebImagesURL%>/created.png" />

% } elsif ($DateTypes->{Started}
%           and RTx::Calendar::LocalDate($Object->StartedObj->Unix) eq $today) {
    <img src="<%$RT::WebImagesURL%>/started.png" />

% } elsif ($DateTypes->{LastUpdated}
%           and RTx::Calendar::LocalDate($Object->LastUpdatedObj->Unix) eq $today) {
    <img src="<%$RT::WebImagesURL%>/updated.png" />

% }

<%perl>

my $i = 0;
foreach my $col ( @Format ) {
    my $title = $col->{'title'} || '';
    if ( $title eq 'NEWLINE' ) {
        $m->out(qq{<br />});
        next;
    } elsif ( $title eq 'NBSP' ) {
        $m->out(qq{&nbsp;\n});
        next;
    }

    # if title is not defined then use defined attribute or last
    # one we saw in the format
    unless ( defined $col->{'title'} ) {
        my $attr = $col->{'attribute'} || $col->{'last_attribute'};
        my $tmp = $m->comp( '/Elements/ColumnMap',
            Class => $Class,
            Name  => $attr,
            Attr  => 'title',
        );
        $title = ProcessColumnMapValue( $tmp, Arguments => [ $attr ] );

        # in case title is not defined in ColumnMap 
        # the following regex changes $attr like from "ReferredToBy" to "Referred To By"
        $title = join ' ', split /(?<=[a-z])(?=[A-Z])/, $attr unless defined $title;
    } else {
        $title = $m->comp('/Elements/ScrubHTML', Content => $title);
    }

    my @out;
    foreach my $subcol ( @{ $col->{output} } ) {
        my ($col) = ($subcol =~ /^__(.*?)__$/);
        unless ( $col ) {
            push @out, $subcol;
            next;
        }

        unless ( exists $ColumnMap->{$col}{'value'} ) {
            $ColumnMap->{$col}{'value'} = $m->comp(
                "/Elements/ColumnMap",
                Class => $Class,
                Name  => $col,
                Attr  => 'value'
            );
        }

        push @out, ProcessColumnMapValue(
            $ColumnMap->{$col}{'value'},
            Arguments => [$Object],
        );
    }
    s/\n/<br \/>/gs for grep defined $_, @out;


    $m->out( '<strong>' . loc($title) . ':</strong> ' ) if $title;
    $m->out(@out) if @out;

    unless ( $i++ ) {
        $m->out( '<br /></small><span class="tip">' );
        $m->out( '<strong>' . loc($title) . ':</strong> ' ) if $title;
        $m->out(@out) if @out;
    }
    $m->out('<br />');
}
</%perl>

	</span>
</div>

<%init>
use RTx::Calendar;

my $today = $Date->strftime("%F");

my $TicketId;

my $ticket;
my $subject;
my $IsReminder;

if ($Object->Type eq 'reminder') {
    $IsReminder = 1;
    if ($Object->RefersTo->First) {
	$ticket   = $Object->RefersTo->First->TargetObj;
	$TicketId = $ticket->Id;
	$subject = $Object->Subject . " (" . $ticket->Subject . ")";
    }
} else {
    $TicketId = $Object->Id;
    $subject = $Object->Subject;
}

</%init>
